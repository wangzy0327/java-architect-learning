<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imooc.mapper.ItemsMapperCustom" >
    <resultMap id="itemCommentVO" type="com.imooc.vo.ItemCommentVO">
        <result column="commentLevel" property="commentLevel" />
        <result column="content" property="content" />
        <result column="specName" property="specName"  />
        <result column="userFace" property="userFace"  />
        <result column="nickname" property="nickname"  />
    </resultMap>
  <select id="queryItemComments" parameterType="map" resultMap="itemCommentVO">
    SELECT
     ic.comment_level as commentLevel,
     ic.content as content,
     ic.sepc_name as specName,
     ic.created_time as createdTime,
     u.face as userFace,
     u.nickname as nickname
    FROM
     items_comments ic
    LEFT JOIN
     users u
    ON
     ic.user_id = u.id
    WHERE
     ic.item_id = #{paramsMap.itemId}
     <if test="paramsMap.level != null and paramsMap.level != '' ">
       AND ic.comment_level = #{paramsMap.level}
     </if>
  </select>
    <resultMap id="searchItemsVO" type="com.imooc.vo.SearchItemsVO">
        <result column="itemId" property="itemId" />
        <result column="itemName" property="itemName" />
        <result column="sellCounts" property="sellCounts"  />
        <result column="imgUrl" property="imgUrl"  />
        <result column="price" property="price"  />
    </resultMap>
    <select id="searchItems" parameterType="map" resultMap="searchItemsVO">
        SELECT
            i.id AS itemId,
            i.item_name AS itemName,
            i.sell_counts AS sellCounts,
            ii.url AS imgUrl,
            tempSpec.price_discount AS price
        FROM
            items i
        LEFT JOIN
            items_img ii
        ON
            i.id = ii.item_id
        LEFT JOIN
            (
                SELECT
                    item_id,MIN(price_discount) AS price_discount
                FROM
                    items_spec
                GROUP BY
                    item_id
            ) tempSpec
        ON i.id = tempSpec.item_id
        WHERE
            ii.is_main = 1
            <if test="paramsMap.keywords != null and paramsMap.keywords != '' ">
                AND i.item_name like '%${paramsMap.keywords}%'
            </if>
            order by
            <choose>
                <!--使用多条件判断排序  单引号 转义 &quot; -->
                <!--nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException-->
                <when test="paramsMap.sort == &quot;c&quot; ">
                    i.sell_counts desc
                </when>
                <when test="paramsMap.sort == &quot;p&quot; ">
                    tempSpec.price_discount asc
                </when>
                <otherwise>
                    i.item_name asc
                </otherwise>
            </choose>
    </select>
    <!--
    k:默认，代表默认排序，根据name
    c:根据销量排序
    p:根据价格排序
    -->

    <select id="searchItemsByThirdCat" parameterType="map" resultMap="searchItemsVO">
        SELECT
        i.id AS itemId,
        i.item_name AS itemName,
        i.sell_counts AS sellCounts,
        ii.url AS imgUrl,
        tempSpec.price_discount AS price
        FROM
        items i
        LEFT JOIN
        items_img ii
        ON
        i.id = ii.item_id
        LEFT JOIN
        (
        SELECT
        item_id,MIN(price_discount) AS price_discount
        FROM
        items_spec
        GROUP BY
        item_id
        ) tempSpec
        ON i.id = tempSpec.item_id
        WHERE
            ii.is_main = 1
        AND
            i.cat_id = #{paramsMap.catId}
        order by
        <choose>
            <!--使用多条件判断排序  单引号 转义 &quot; -->
            <!--nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException-->
            <when test="paramsMap.sort == &quot;c&quot; ">
                i.sell_counts desc
            </when>
            <when test="paramsMap.sort == &quot;p&quot; ">
                tempSpec.price_discount asc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>
        </choose>
    </select>

    <select id="queryItemsBySpecIds" parameterType="List" resultType="com.imooc.vo.ShopCartVO">
        SELECT
            items.id as itemId,
            items.item_name as itemName,
            items_img.url as itemImgUrl,
            items_spec.id as specId,
            items_spec.`name` as specName,
            items_spec.price_discount as priceDiscount,
            items_spec.price_normal as priceNormal
        FROM
            items_spec
        LEFT JOIN
            items
        ON
            items_spec.item_id = items.id
        LEFT JOIN
            items_img
        ON
            items_img.item_id = items.id
        WHERE
            items_img.is_main = 1
        AND
            items_spec.id
        IN
            <foreach collection="paramsList" index="index" item="specId" open="(" close=")" separator=",">
                #{specId}
            </foreach>
    </select>
    <!--采用数据库条件语句判断 多抢占变量的值 -->
    <update id="decreaseItemSpecStock">
        update
            items_spec
        set
            stock = stock - #{pendingCounts}
        where
            id = #{specId}
        and
            stock >= #{pendingCounts}
    </update>
</mapper>